name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  qa-tag:
    name: Call QA
    uses: ./.github/workflows/test.yml

  qa-successful-tag:
    needs: qa-tag
    name: Evaluate QA results
    if: ( success() || failure() )
    runs-on: ubuntu-22.04
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  release:
    needs: qa-successful-tag
    name: Publish action
    runs-on: ubuntu-22.04
    concurrency: lib-publish
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: read

    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        env:
          # renovate: datasource=docker depName=node versioning=node
          NODE_VERSION: "20.13.1"
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Enable Corepack
        run: corepack enable

      # Yarn dependencies cannot be cached until yarn is installed
      # WORKAROUND: https://github.com/actions/setup-node/issues/531
      - name: Extract cached dependencies
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Determine release version
        run: echo "RELEASE_VERSION=$(node .scripts/manifest-version.cjs)" >> $GITHUB_ENV

      - uses: oliversalzburg/action-automatic-semantic-releases@bc429dc1af8c036b5f8c11fef7bcb0becfd5064d # v0.0.13
        with:
          draft: false
          prerelease: false
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: v${{ env.RELEASE_VERSION }}
